version: '3.8'

services:
  # Python Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: postpress-php-backend
    environment:
      - LOGIN=${LOGIN:-admin}
      - PASSWORD=${PASSWORD:-admin123}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SENDER_EMAIL=${SENDER_EMAIL}
      - SENDER_PASSWORD=${SENDER_PASSWORD}
      - RECIPIENT_EMAIL=${RECIPIENT_EMAIL}
      - DEBUG=${DEBUG:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SECRET_KEY=${SECRET_KEY:-postpress-secret-key-2025}
    volumes:
      - ./backend/uploads:/var/www/html/uploads:rw
      - ./backend/data:/var/www/html/data:rw
      - ./backend/app.log:/var/www/html/app.log:rw
    networks:
      - postpress-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: postpress-frontend
    ports:
      - "3000:80"
    volumes:
      - ./backend/uploads:/usr/share/nginx/html/uploads:ro
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - postpress-network
    restart: unless-stopped

  # Nginx Proxy для объединения frontend и backend
  nginx:
    image: nginx:alpine
    container_name: postpress-nginx-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./backend/uploads:/var/www/html/uploads:ro
    depends_on:
      - backend
      - frontend
    networks:
      - postpress-network
    restart: unless-stopped

networks:
  postpress-network:
    driver: bridge

volumes:
  backend_uploads:
    driver: local
  backend_data:
    driver: local 